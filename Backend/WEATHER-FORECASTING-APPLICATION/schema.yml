openapi: 3.0.3
info:
  title: Django DRF WeatherForecasting
  version: 0.0.0
paths:
  /emergencies/:
    get:
      operationId: emergencies_retrieve
      tags:
      - emergencies
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: emergencies_create
      tags:
      - emergencies
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /emergencies/{id}/:
    get:
      operationId: emergencies_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergencies
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: emergencies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergencies
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: emergencies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergencies
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /forgot-password/:
    post:
      operationId: forgot_password_create
      tags:
      - forgot-password
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /posts/:
    get:
      operationId: posts_retrieve
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: posts_create
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /posts/{id}/:
    get:
      operationId: posts_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: posts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: posts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /posts/{post_id}/comment/:
    get:
      operationId: posts_comment_retrieve
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: posts_comment_create
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: posts_comment_update
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: posts_comment_destroy
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /posts/{post_id}/like/:
    post:
      operationId: posts_like_create
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /posts/search/:
    get:
      operationId: posts_search_retrieve
      tags:
      - posts
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /reset-password/:
    post:
      operationId: reset_password_create
      tags:
      - reset-password
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /superuser-login/:
    post:
      operationId: superuser_login_create
      tags:
      - superuser-login
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user-badges/:
    get:
      operationId: user_badges_retrieve
      tags:
      - user-badges
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /weather/accuweather-5day-forecast/:
    get:
      operationId: weather_accuweather_5day_forecast_retrieve
      tags:
      - weather
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /weather/accuweather-hourly-forecast/:
    get:
      operationId: weather_accuweather_hourly_forecast_retrieve
      tags:
      - weather
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /weather/accuweather-one-day-forecast/:
    get:
      operationId: weather_accuweather_one_day_forecast_retrieve
      tags:
      - weather
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /weather/accuweather-one-hourly-forecast/:
    get:
      operationId: weather_accuweather_one_hourly_forecast_retrieve
      tags:
      - weather
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /weather/weather/{cityname}/:
    get:
      operationId: weather_weather_retrieve
      parameters:
      - in: path
        name: cityname
        schema:
          type: string
        required: true
      tags:
      - weather
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /weatherapp/schema/:
    get:
      operationId: weatherapp_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - weatherapp
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
